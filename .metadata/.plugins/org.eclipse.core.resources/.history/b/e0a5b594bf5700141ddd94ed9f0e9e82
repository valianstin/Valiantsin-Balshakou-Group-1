import java.util.ArrayList;
import java.util.List;

//Design and implement code that will introduce:
//1. java.lang.OutOfMemoryError: Java heap space. Create big objects continuously and make them stay in memory.
//2. java.lang.OutOfMemoryError: PermGen space. Load classes continuously and make them stay in memory.

public class Runner {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		OutOfMemoryErrorPermGenSpace();
	}

	public static void OutOfMemoryErrorJavaHeapSpace() {
		List<Integer> list = new ArrayList<Integer>();
		Integer i;
		while (true) {
			i = new Integer(6);
			list.add(i);
		}
	}

	public static void OutOfMemoryErrorPermGenSpace() {
		List<Object> list = new ArrayList<Object>();

		try {
			Class clazz;
			while (true) {
				ClassLoader loader = new ClassLoader() {
				};
				clazz = Class.forName("java.lang.Object", true, loader);
				Object fun = (Object) clazz.newInstance();
				list.add(fun);

			}
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InstantiationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}